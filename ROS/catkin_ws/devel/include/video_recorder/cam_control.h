// Generated by gencpp from file video_recorder/cam_control.msg
// DO NOT EDIT!


#ifndef VIDEO_RECORDER_MESSAGE_CAM_CONTROL_H
#define VIDEO_RECORDER_MESSAGE_CAM_CONTROL_H

#include <ros/service_traits.h>


#include <video_recorder/cam_controlRequest.h>
#include <video_recorder/cam_controlResponse.h>


namespace video_recorder
{

struct cam_control
{

typedef cam_controlRequest Request;
typedef cam_controlResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct cam_control
} // namespace video_recorder


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::video_recorder::cam_control > {
  static const char* value()
  {
    return "d5be26e0dc9e08360fce9406fdf1866e";
  }

  static const char* value(const ::video_recorder::cam_control&) { return value(); }
};

template<>
struct DataType< ::video_recorder::cam_control > {
  static const char* value()
  {
    return "video_recorder/cam_control";
  }

  static const char* value(const ::video_recorder::cam_control&) { return value(); }
};


// service_traits::MD5Sum< ::video_recorder::cam_controlRequest> should match 
// service_traits::MD5Sum< ::video_recorder::cam_control > 
template<>
struct MD5Sum< ::video_recorder::cam_controlRequest>
{
  static const char* value()
  {
    return MD5Sum< ::video_recorder::cam_control >::value();
  }
  static const char* value(const ::video_recorder::cam_controlRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::video_recorder::cam_controlRequest> should match 
// service_traits::DataType< ::video_recorder::cam_control > 
template<>
struct DataType< ::video_recorder::cam_controlRequest>
{
  static const char* value()
  {
    return DataType< ::video_recorder::cam_control >::value();
  }
  static const char* value(const ::video_recorder::cam_controlRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::video_recorder::cam_controlResponse> should match 
// service_traits::MD5Sum< ::video_recorder::cam_control > 
template<>
struct MD5Sum< ::video_recorder::cam_controlResponse>
{
  static const char* value()
  {
    return MD5Sum< ::video_recorder::cam_control >::value();
  }
  static const char* value(const ::video_recorder::cam_controlResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::video_recorder::cam_controlResponse> should match 
// service_traits::DataType< ::video_recorder::cam_control > 
template<>
struct DataType< ::video_recorder::cam_controlResponse>
{
  static const char* value()
  {
    return DataType< ::video_recorder::cam_control >::value();
  }
  static const char* value(const ::video_recorder::cam_controlResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // VIDEO_RECORDER_MESSAGE_CAM_CONTROL_H
